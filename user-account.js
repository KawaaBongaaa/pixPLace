// üéØ –ú–æ–¥—É–ª—å –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ pixPLace
// –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
import { ru } from './dictionaries/ru.js';
import { en } from './dictionaries/en.js';

// –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥—É–ª—è
const userAccountState = {
    currentModal: null,
    financialHistoryPage: 1,
    creditPacksModal: null
};

// üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
function initUserAccount() {
    console.log('üéØ Initializing User Account module');

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userMenuBtn = document.getElementById('userMenuBtn');
    if (userMenuBtn) {
        userMenuBtn.addEventListener('click', toggleUserMenu);
        console.log('‚úÖ User menu button handler attached');
    } else {
        console.warn('‚ö†Ô∏è User menu button not found');
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ (—Å –∑–∞–¥–µ—Ä–∂–∫–æ–π —á—Ç–æ–±—ã –¥–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É)
    document.addEventListener('click', (e) => {
        const menu = document.getElementById('userMenuDropdown');
        const btn = document.getElementById('userMenuBtn');
        const wrapper = document.getElementById('user-menu-wrapper');

        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–ª–∏–∫ –µ—Å–ª–∏ –æ–Ω —Ç–æ–ª—å–∫–æ —á—Ç–æ –±—ã–ª –ø–æ –∫–Ω–æ–ø–∫–µ
        if (menu && menu.classList.contains('show') &&
            !menu.contains(e.target) &&
            !btn.contains(e.target) &&
            (!wrapper || !wrapper.contains(e.target))) {
            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ —É—Å–ø–µ–ª –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å
            setTimeout(() => {
                const menuStillOpen = document.getElementById('userMenuDropdown');
                if (menuStillOpen && menuStillOpen.classList.contains('show')) {
                    menuStillOpen.classList.remove('show');
                    console.log('Menu closed by outside click');
                }
            }, 50);
        }
    });

    console.log('‚úÖ User Account module initialized');
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
function showGenerationResultModal(item) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    let modal = document.getElementById('generationResultModal');
    if (modal) {
        modal.remove();
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å –ø–æ –∏–º–µ–Ω–∏
    const getStyleName = (type) => {
        const modeMap = {
            'Nano Banana Editor': 'photo_session',
            'Flux Fast Generation': 'fast_generation',
            'Flux Pro Advanced': 'pixplace_pro',
            'Background Removal': 'background_removal',
            'Upscale Image': 'upscale_image',
            'Print on Demand': 'print_maker'
        };

        const mode = type in modeMap ? modeMap[type] : 'fast_generation';

        return mode;
    };

    modal = document.createElement('div');
    modal.id = 'generationResultModal';
    modal.className = 'generation-result-modal';
    modal.innerHTML = `
        <div class="modal-backdrop" onclick="closeGenerationResultModal()"></div>
        <div class="modal-content">
            <div class="modal-header">
                <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</h3>
                <button class="close-btn" onclick="closeGenerationResultModal()">‚úï</button>
            </div>
            <div class="modal-body">
                <div class="generation-result-container">
                    <div class="generation-result-image">
                        <img src="${item.imageUrl}" alt="Generated Image" class="result-full-image" loading="lazy" />
                    </div>
                    <div class="generation-result-details">
                        <div class="result-meta">
                            <div class="result-meta-item">
                                <span class="meta-label">–î–∞—Ç–∞:</span>
                                <span class="meta-value">${new Date(item.date).toLocaleString()}</span>
                            </div>
                            <div class="result-meta-item">
                                <span class="meta-label">–†–µ–∂–∏–º:</span>
                                <span class="meta-value">${item.type}</span>
                            </div>
                            <div class="result-meta-item">
                                <span class="meta-label">–°–ø–∏—Å–∞–Ω–æ:</span>
                                <span class="meta-value amount-negative">${Math.abs(item.amount)} ${item.currency}</span>
                            </div>
                        </div>
                        <div class="result-prompt">
                            <div class="prompt-label">–ü—Ä–æ–º–ø—Ç:</div>
                            <div class="prompt-text">${item.description}</div>
                        </div>
                        <div class="result-actions">
                            <button class="btn btn-primary download-result-btn" onclick="downloadResultImage('${item.imageUrl}', '${item.id}')">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
                                    <polyline points="7,10 12,15 17,10" />
                                    <line x1="12" y1="15" x2="12" y2="3" />
                                </svg>
                                –°–∫–∞—á–∞—Ç—å
                            </button>
                            <button class="btn btn-secondary share-result-btn" onclick="shareResultImage('${item.imageUrl}', '${item.id}')">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <circle cx="18" cy="5" r="3" />
                                    <circle cx="6" cy="12" r="3" />
                                    <circle cx="18" cy="19" r="3" />
                                    <line x1="8.59" y1="13.51" x2="15.42" y2="17.49" />
                                    <line x1="15.41" y1="6.51" x2="8.59" y2="10.49" />
                                </svg>
                                –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                            </button>
                            <button class="btn btn-outline reuse-prompt-btn" onclick="reusePrompt('${item.description}', '${getStyleName(item.type)}')">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <polygon points="23,12 20.5,9.5 18,12 23,12" />
                                    <polygon points="1,12 3.5,14.5 6,12 1,12" />
                                    <rect x="2" y="3" rx="2" ry="2" width="20" height="8" />
                                </svg>
                                –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;

    document.body.appendChild(modal);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    setTimeout(() => {
        modal.classList.add('show');
    }, 10);

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ ESC –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
    const handleEscapeKey = (event) => {
        if (event.key === 'Escape') {
            closeGenerationResultModal();
        }
    };

    document.addEventListener('keydown', handleEscapeKey);

    // –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const originalClose = closeGenerationResultModal;
    const closeWithCleanup = () => {
        document.removeEventListener('keydown', handleEscapeKey);
        originalClose();
    };

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–∫—Ä—ã—Ç–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    window.closeGenerationResultModal = closeWithCleanup;

    console.log('üì∏ Opened generation result modal for:', item.id);
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
function closeGenerationResultModal() {
    console.log('üîí Attempting to close generation result modal');
    const modal = document.getElementById('generationResultModal');
    if (modal) {
        console.log('‚úÖ Found modal, removing show class');
        modal.classList.remove('show');
        setTimeout(() => {
            console.log('üóëÔ∏è Removing modal from DOM');
            modal.remove();
        }, 300);
    } else {
        console.log('‚ùå Modal not found');
    }
}

// –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function downloadResultImage(imageUrl, itemId) {
    const link = document.createElement('a');
    link.href = imageUrl;
    link.download = `pixplace-generation-${itemId}.png`;
    link.target = '_blank';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);

    showToast('success', '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è...');
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
function shareResultImage(imageUrl, itemId) {
    if (navigator.share) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º Web Share API –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
        navigator.share({
            title: '–ú–æ–µ AI –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ pixPLace',
            text: '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤ pixPLace!',
            url: imageUrl
        }).catch(console.error);
    } else {
        // –§allback - –∫–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
        navigator.clipboard.writeText(imageUrl).then(() => {
            showToast('info', '–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
        }).catch(() => {
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π fallback - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
            window.open(imageUrl, '_blank');
        });
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å —Ç–µ–º –∂–µ –ø—Ä–æ–º–ø—Ç–æ–º
function reusePrompt(prompt, mode) {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–±–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–Ω–∞
    closeGenerationResultModal();
    closeFinancialHistoryModal();

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    showGeneration();

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–º–ø—Ç –∏ —Ä–µ–∂–∏–º –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
    setTimeout(() => {
        const promptInput = document.getElementById('promptInput');
        const modeSelect = document.getElementById('modeSelect');

        if (promptInput) {
            promptInput.value = prompt.replace('...', '').trim();
            promptInput.focus();
        }

        if (modeSelect) {
            modeSelect.value = mode;
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—É—Å–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            updateModeSelection(mode);
        }

        showToast('info', '–ü—Ä–æ–º–ø—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω! –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –≤–Ω–∏–∑ –∏ –Ω–∞–∂–º–∏—Ç–µ Generate');
    }, 300);
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –≤ –∫–∞—Ä—É—Å–µ–ª–∏
function updateModeSelection(mode) {
    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–∂–∏–º–∞ –≤ –∫–∞—Ä—É—Å–µ–ª–∏
    const modeCards = document.querySelectorAll('.mode-card');
    modeCards.forEach(card => {
        const cardMode = card.getAttribute('data-mode');
        if (cardMode === mode) {
            // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ —Ä–µ–∂–∏–º–∞ —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–µ
            setTimeout(() => {
                card.click();
            }, 50);
        }
    });
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
function showGeneration() {
    const generationScreen = document.getElementById('generationScreen');
    const currentScreen = document.querySelector('.screen.active');

    if (generationScreen && currentScreen && currentScreen.id !== 'generationScreen') {
        currentScreen.classList.remove('active');
        generationScreen.classList.add('active');

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç —Ç–µ–∫—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞
        const mainContent = document.querySelector('.main-content[data-current-screen]');
        if (mainContent) {
            mainContent.setAttribute('data-current-screen', 'generation');
        }

        console.log('Switched to generation screen');
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function toggleUserMenu() {
    const menu = document.getElementById('userMenuDropdown');
    if (!menu) return;

    const isVisible = menu.classList.contains('show');
    if (isVisible) {
        menu.classList.remove('show');
        console.log('User menu toggled: hidden');
    } else {
        menu.classList.add('show');
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        updateUserMenuInfo();
        console.log('User menu toggled: visible');
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function updateUserMenuInfo() {
    const nameElement = document.getElementById('userMenuName');
    const creditsElement = document.getElementById('userMenuCredits');

    if (nameElement) {
        nameElement.textContent = window.appState?.userName ||
                                 window.appState?.userUsername ||
                                 window.appState?.userId || '--';
    }

    if (creditsElement) {
        creditsElement.textContent = window.appState?.userCredits ?
                                    parseFloat(window.appState.userCredits).toLocaleString('en-US') : '--';
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–ø–∏—Å–∞–Ω–∏–π
function openFinancialHistory() {
    console.log('üî• Opening financial history modal');
    showFinancialHistoryModal();
    // –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π, —á—Ç–æ–±—ã –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ–ª–æ –æ—Ç–∫—Ä—ã—Ç—å—Å—è
    setTimeout(() => {
        toggleUserMenu();
    }, 100);
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–æ–≤
function openSubscriptionPlans() {
    if (window.showSubscriptionNotice) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–∞—Ä–∏—Ñ–æ–≤
        window.showSubscriptionNotice({
            payment_urls: {
                lite: 'https://example.com/lite',
                pro: 'https://example.com/pro',
                studio: 'https://example.com/studio'
            }
        });
    } else {
        showToast('error', 'Tariff selection not available');
    }
    toggleUserMenu(); // –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è Credit Packs
function openCreditPacks() {
    console.log('üî• Opening credit packs modal');
    showCreditPacksModal();
    // –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π, —á—Ç–æ–±—ã –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ–ª–æ –æ—Ç–∫—Ä—ã—Ç—å—Å—è
    setTimeout(() => {
        toggleUserMenu();
    }, 100);
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏—Å—Ç–æ—Ä–∏–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
function showFinancialHistoryModal() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    let modal = document.getElementById('financialHistoryModal');
    if (modal) {
        modal.remove();
    }

    modal = document.createElement('div');
    modal.id = 'financialHistoryModal';
    modal.className = 'financial-history-modal';
    modal.innerHTML = `
        <div class="modal-backdrop" onclick="closeFinancialHistoryModal()"></div>
        <div class="modal-content">
            <div class="modal-header">
                <h3 data-i18n="financial_history">–ò—Å—Ç–æ—Ä–∏—è —Å–ø–∏—Å–∞–Ω–∏–π</h3>
                <button class="close-btn" onclick="closeFinancialHistoryModal()">‚úï</button>
            </div>
            <div class="modal-body">
                <div id="financial-history-list" class="financial-history-list">
                    <!-- –ò—Å—Ç–æ—Ä–∏–∏ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                </div>
                <div id="financial-history-loader" class="history-loader hidden">
                    <div class="loader"></div>
                    <p data-i18n="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
                </div>
                <div id="financial-history-empty" class="empty-history hidden">
                    <div class="empty-icon">üí≥</div>
                    <p data-i18n="no_financial_history">–ò—Å—Ç–æ—Ä–∏—è —Å–ø–∏—Å–∞–Ω–∏–π –ø—É—Å—Ç–∞</p>
                </div>
            </div>
        </div>
    `;

    document.body.appendChild(modal);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setTimeout(() => {
        modal.classList.add('show');
    }, 10);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å lazy loading
    loadFinancialHistory();
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏ —Å lazy loading
function loadFinancialHistory(page = 1, limit = 20) {
    const historyList = document.getElementById('financial-history-list');
    const loader = document.getElementById('financial-history-loader');
    const empty = document.getElementById('financial-history-empty');

    if (!historyList) return;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    loader.classList.remove('hidden');
    empty.classList.add('hidden');

    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –∑–∞–ø—Ä–æ—Å)
    setTimeout(() => {
        const mockHistory = generateMockFinancialHistory();
        const startIndex = (page - 1) * limit;
        const endIndex = startIndex + limit;
        const pageData = mockHistory.slice(startIndex, endIndex);

        if (page === 1) {
            historyList.innerHTML = '';
        }

        if (pageData.length === 0) {
            if (page === 1) {
                empty.classList.remove('hidden');
            }
            loader.classList.add('hidden');
            return;
        }

        pageData.forEach(item => {
            const historyItem = createFinancialHistoryItem(item);
            historyList.appendChild(historyItem);
        });

        // –ï—Å–ª–∏ –µ—Å—Ç—å –µ—â–µ –¥–∞–Ω–Ω—ã–µ, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë"
        if (mockHistory.length > endIndex) {
            const loadMoreBtn = document.createElement('button');
            loadMoreBtn.className = 'load-more-financial-btn';
            loadMoreBtn.textContent = '–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë...';
            loadMoreBtn.onclick = () => {
                loadMoreBtn.remove();
                loadFinancialHistory(page + 1, limit);
            };
            historyList.appendChild(loadMoreBtn);
        }

        loader.classList.add('hidden');
    }, 1000); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ API
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏
function createFinancialHistoryItem(item) {
    const element = document.createElement('div');
    element.className = 'financial-history-item history-item-clickable';

    const isPositive = item.amount > 0;

    element.innerHTML = `
        <div class="history-item-header">
            <div class="history-item-date">${new Date(item.date).toLocaleString()}</div>
            <div class="history-item-amount ${isPositive ? 'positive' : 'negative'}">
                ${isPositive ? '+' : ''}${item.amount} ${item.currency}
            </div>
        </div>
        <div class="history-item-details">
            <div class="history-item-type">${item.type}</div>
            <div class="history-item-description">${item.description}</div>
            ${item.imageUrl ? `<img src="${item.imageUrl}" alt="Generated" class="history-item-preview" loading="lazy">` : ''}
        </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    if (item.imageUrl) {
        element.style.cursor = 'pointer';
        element.addEventListener('click', () => {
            showGenerationResultModal(item);
        });

        // –î–æ–±–∞–≤–ª—è–µ–º hover-—ç—Ñ—Ñ–µ–∫—Ç—ã
        element.addEventListener('mouseenter', () => {
            element.classList.add('history-item-hover');
        });

        element.addEventListener('mouseleave', () => {
            element.classList.remove('history-item-hover');
        });
    }

    return element;
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏
function generateMockFinancialHistory() {
    const mockData = [];
    const currentDate = new Date();

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –∏–∑ appState –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
    const generationHistory = window.appState?.generationHistory || [];

    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π
    generationHistory.forEach((gen, index) => {
        const date = new Date(gen.timestamp);
        const cost = gen.generation_cost || gen.cost || -10; // –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏–π

        mockData.push({
            id: `hist_${gen.id}`,
            date: date.toISOString(),
            amount: parseFloat(cost),
            currency: 'Cr',
            type: getModeDisplayName(gen.mode),
            description: gen.prompt ? `${gen.prompt.substring(0, 50)}...` : '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
            imageUrl: gen.result || null
        });
    });

    // –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –º–∞–ª–æ, –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (mockData.length < 25) {
        for (let i = mockData.length; i < 25; i++) {
            const date = new Date(currentDate);
            date.setDate(date.getDate() - i);
            date.setHours(Math.floor(Math.random() * 24));
            date.setMinutes(Math.floor(Math.random() * 60));

            const modes = [
                'Flux Fast Generation',
                'Nano Banana Editor',
                'Flux Pro Advanced',
                'Background Removal',
                'Upscale Image'
            ];

            const mode = modes[Math.floor(Math.random() * modes.length)];

            const amounts = [-5, -10, -15, -20, -25, -50, 100, 250];
            const amount = amounts[Math.floor(Math.random() * amounts.length)];

            const descriptions = [
                '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤—ã—Å–æ–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ',
                '–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏',
                '–ü—Ä–µ–º–∏—É–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏',
                '–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∫–∞—á–µ—Å—Ç–≤–∞',
                '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ 4K',
                '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∫—Ä–µ–¥–∏—Ç–æ–≤'
            ];

            const description = descriptions[Math.floor(Math.random() * descriptions.length)];

            mockData.push({
                id: `hist_mock_${i}`,
                date: date.toISOString(),
                amount: amount,
                currency: 'Cr',
                type: mode,
                description: description,
                imageUrl: amount < 0 ? `https://picsum.photos/100?random=${i}` : null
            });
        }
    }

    return mockData.sort((a, b) => new Date(b.date) - new Date(a.date));
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–∏—Ç–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞
function getModeDisplayName(mode) {
    const modeNames = {
        'photo_session': 'Nano Banana Editor',
        'fast_generation': 'Flux Fast Generation',
        'pixplace_pro': 'Flux Pro Advanced',
        'background_removal': 'Background Removal',
        'upscale_image': 'Upscale Image',
        'print_maker': 'Print on Demand'
    };

    return modeNames[mode] || mode;
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏
function closeFinancialHistoryModal() {
    const modal = document.getElementById('financialHistoryModal');
    if (modal) {
        modal.classList.remove('show');
        setTimeout(() => {
            modal.remove();
        }, 300);
    }
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ Credit Packs
function showCreditPacksModal() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    let modal = document.getElementById('creditPacksModal');
    if (modal) {
        modal.remove();
    }

    modal = document.createElement('div');
    modal.id = 'creditPacksModal';
    modal.className = 'credit-packs-modal';
    modal.innerHTML = `
        <div class="modal-backdrop" onclick="closeCreditPacksModal()"></div>
        <div class="modal-content">
            <div class="modal-header">
                <h3 data-i18n="choose_credit_pack">–í—ã–±—Ä–∞—Ç—å Credit Pack</h3>
                <button class="close-btn" onclick="closeCreditPacksModal()">‚úï</button>
            </div>
            <div class="modal-body">
                <div class="credit-packs-grid">
                    <!-- Credit Pack 250 -->
                    <div class="credit-pack-card" data-amount="250">
                        <div class="pack-header">
                            <div class="pack-amount">250</div>
                            <div class="pack-label" data-i18n="credits">Credits</div>
                        </div>
                        <div class="pack-price">
                            <span class="price">‚Ç¨2.99</span>
                        </div>
                        <button class="btn btn-primary buy-pack-btn" onclick="buyCreditPack(250)">
                            <span class="btn-text" data-i18n="buy_now">–ö—É–ø–∏—Ç—å</span>
                        </button>
                    </div>

                    <!-- Credit Pack 500 -->
                    <div class="credit-pack-card" data-amount="500">
                        <div class="pack-header">
                            <div class="pack-amount">500</div>
                            <div class="pack-label" data-i18n="credits">Credits</div>
                        </div>
                        <div class="pack-price">
                            <span class="price">‚Ç¨4.99</span>
                        </div>
                        <button class="btn btn-primary buy-pack-btn" onclick="buyCreditPack(500)">
                            <span class="btn-text" data-i18n="buy_now">–ö—É–ø–∏—Ç—å</span>
                        </button>
                    </div>

                    <!-- Credit Pack 1000 -->
                    <div class="credit-pack-card popular" data-amount="1000">
                        <div class="pack-badge" data-i18n="most_popular_pack">–ü–æ–ø—É–ª—è—Ä–Ω—ã–π</div>
                        <div class="pack-header">
                            <div class="pack-amount">1000</div>
                            <div class="pack-label" data-i18n="credits">Credits</div>
                        </div>
                        <div class="pack-price">
                            <span class="price">‚Ç¨7.99</span>
                        </div>
                        <button class="btn btn-primary buy-pack-btn" onclick="buyCreditPack(1000)">
                            <span class="btn-text" data-i18n="buy_now">–ö—É–ø–∏—Ç—å</span>
                        </button>
                    </div>

                    <!-- Credit Pack 2000 -->
                    <div class="credit-pack-card" data-amount="2000">
                        <div class="pack-header">
                            <div class="pack-amount">2000</div>
                            <div class="pack-label" data-i18n="credits">Credits</div>
                        </div>
                        <div class="pack-price">
                            <span class="price">‚Ç¨12.99</span>
                        </div>
                        <button class="btn btn-primary buy-pack-btn" onclick="buyCreditPack(2000)">
                            <span class="btn-text" data-i18n="buy_now">–ö—É–ø–∏—Ç—å</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;

    document.body.appendChild(modal);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setTimeout(() => {
        modal.classList.add('show');
    }, 10);

    userAccountState.creditPacksModal = modal;
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ Credit Pack
function buyCreditPack(amount) {
    const packUrls = {
        250: 'https://example.com/buy-250',
        500: 'https://example.com/buy-500',
        1000: 'https://example.com/buy-1000',
        2000: 'https://example.com/buy-2000'
    };

    const url = packUrls[amount] || 'https://t.me/tribute/app?start=credits';
    window.open(url, '_blank');

    closeCreditPacksModal();
    showToast('info', `–û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∫—É–ø–∫–∏ ${amount} –∫—Ä–µ–¥–∏—Ç–æ–≤`);
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ Credit Packs
function closeCreditPacksModal() {
    const modal = document.getElementById('creditPacksModal');
    if (modal) {
        modal.classList.remove('show');
        setTimeout(() => {
            modal.remove();
        }, 300);
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–æ—Å—Ç–æ–≤
function showToast(type, message) {
    if (window.showToast) {
        window.showToast(type, message);
    } else {
        console.log(`Toast (${type}): ${message}`);
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
window.toggleUserMenu = toggleUserMenu;
window.updateUserMenuInfo = updateUserMenuInfo;
window.openFinancialHistory = openFinancialHistory;
window.openSubscriptionPlans = openSubscriptionPlans;
window.openCreditPacks = openCreditPacks;
window.showFinancialHistoryModal = showFinancialHistoryModal;
window.closeFinancialHistoryModal = closeFinancialHistoryModal;
window.showCreditPacksModal = showCreditPacksModal;
window.closeCreditPacksModal = closeCreditPacksModal;
window.buyCreditPack = buyCreditPack;
window.showGenerationResultModal = showGenerationResultModal;
window.closeGenerationResultModal = closeGenerationResultModal;
window.downloadResultImage = downloadResultImage;
window.shareResultImage = shareResultImage;
window.reusePrompt = reusePrompt;

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–¥—É–ª—è
export {
    initUserAccount,
    toggleUserMenu,
    updateUserMenuInfo,
    openFinancialHistory,
    openSubscriptionPlans,
    openCreditPacks,
    showFinancialHistoryModal,
    closeFinancialHistoryModal,
    showCreditPacksModal,
    closeCreditPacksModal,
    buyCreditPack
};

console.log('üéØ User Account module loaded and ready');

// üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    initUserAccount();
});

// –ò–ª–∏ –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initUserAccount);
} else {
    initUserAccount();
}

// –≠–∫—Å–ø–æ—Ä—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è —Å–ª—É—á–∞–µ–≤ —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
window.initUserAccount = initUserAccount;
