// üéØ UI Navigation Manager - –í—ã–Ω–æ—Å —Ñ—É–Ω–∫—Ü–∏–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–∑ app_modern.js
// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞–º–∏, –∏—Å—Ç–æ—Ä–∏–µ–π, –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π

import { showResult, displayFullResult, showResultToast, removeResultToast, showApp } from './screen-manager.js';

// ================================================
// üåç NAVIGATION FUNCTIONS
// ================================================

// –§—É–Ω–∫—Ü–∏—è –∏–∑ app_modern.js - updateUserNameDisplay
export function updateUserNameDisplay() {
    const nameElement = document.getElementById('userNameDisplay');

    if (!nameElement) return;

    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è: username > –∏–º—è+—Ñ–∞–º–∏–ª–∏—è > –∏–º—è > userId
    let displayName = '';

    if (appState.userUsername) {
        // –ï—Å—Ç—å username - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å @
        displayName = '@' + appState.userUsername;
    } else if (appState.userName && appState.userName.trim() !== '') {
        // –ï—Å—Ç—å –∏–º—è/—Ñ–∞–º–∏–ª–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
        displayName = appState.userName;
    } else if (appState.userId) {
        // –ù–µ—Ç –∏–º–µ–Ω–∏, –Ω–æ –µ—Å—Ç—å ID - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        displayName = 'ID: ' + appState.userId.toString().substring(0, 8) + '...';
    } else {
        // –ù–∏—á–µ–≥–æ –Ω–µ—Ç - –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        displayName = '--';
    }

    nameElement.textContent = displayName;
    console.log('üë§ User name display updated:', displayName);
}



export function updateUserBalanceDisplay(credits, reason = '') {
    if (credits !== null && credits !== undefined) {
        const newBalance = parseFloat(credits);
        const oldBalance = appState.userCredits;
        const timestamp = Date.now();

        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é –î–û –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
        appState.balanceHistory.push({
            balance: newBalance,
            timestamp: timestamp,
            reason: reason,
            previousBalance: oldBalance
        });

        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–æ 100 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π
        if (appState.balanceHistory.length > 100) {
            appState.balanceHistory = appState.balanceHistory.slice(-100);
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ localStorage
        appState.saveBalanceHistory();

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
        appState.userCredits = newBalance;
        appState.lastBalanceUpdate = timestamp;
        appState.saveSettings(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ localStorage

        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ header
        const balanceElement = document.getElementById('userCreditsDisplay');
        if (balanceElement) {
            if (!isNaN(credits) && credits !== null) {
                balanceElement.textContent = parseFloat(credits).toLocaleString('en-US');
            } else {
                balanceElement.textContent = '--';
            }
        }

        console.log('üí≥ Balance updated:', { old: oldBalance, new: newBalance, reason });
    }
}


// –§—É–Ω–∫—Ü–∏—è –∏–∑ app_modern.js - showBackButton
export function showBackButton(show) {
    const body = document.body;
    if (show) {
        body.classList.add('show-back');
    } else {
        body.classList.remove('show-back');
    }
}


// –î–æ–±–∞–≤–ª—è–µ–º —ç–∫—Å–ø–æ—Ä—Ç –≤ window –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.showBackButton = showBackButton;

// –§—É–Ω–∫—Ü–∏—è –∏–∑ app_modern.js - toggleHistoryList
export function toggleHistoryList() {
    const list = document.getElementById('historyList');
    const btn = document.getElementById('historyToggleBtn');

    if (list.classList.contains('hidden')) {
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        list.classList.remove('hidden');
        btn.classList.add('active');

        console.log('üìÇ History opened');

        // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ù–ï –û–ë–ù–û–í–õ–Ø–ï–ú –î–ò–°–ü–õ–ï–ô –ü–†–ò –û–¢–ö–†–´–¢–ò–ò - –¢–û–õ–¨–ö–û –ï–°–õ–ò –ò–°–¢–û–†–ò–Ø –ë–´–õ–ê –°–ö–†–´–¢–ê!
        // –í–º–µ—Å—Ç–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        // updateHistoryDisplay –Ω–µ –Ω—É–∂–µ–Ω –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–µ–≤—å—é —É–∂–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

        // –ü–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è - –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        setTimeout(() => {
            if (window.appState?.generationHistory?.length > 0) {
                console.log('üìã Scrolling to latest generation after open');
                scrollToLatestGeneration();
            }
        }, 100);

    } else {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        list.classList.add('hidden');
        btn.classList.remove('active');

        console.log('üìÇ History closed');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º (—É—á–∏—Ç—ã–≤–∞—è –Ω–æ–≤—É—é –≤—ã—Å–æ—Ç—É)
    updateThemeTogglePosition();

    console.log('üìã History toggle completed');
}

// –î–æ–±–∞–≤–ª—è–µ–º —ç–∫—Å–ø–æ—Ä—Ç –≤ window
window.toggleHistoryList = toggleHistoryList;

// –§—É–Ω–∫—Ü–∏—è –∏–∑ app_modern.js - showHistory
export function showHistory() {
    toggleHistoryList();
}

// –§—É–Ω–∫—Ü–∏—è –∏–∑ app_modern.js - showSubscriptionNotice
export function showSubscriptionNotice(result) {
    console.log('üîó Full result object:', result);
    console.log('üîó Payment URLs from result:', result.payment_urls);

    const modal = document.getElementById('limitModal');
    if (!modal) {
        console.error('‚ùå Modal not found!');
        return;
    }

    // üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–≤–µ—Ä—Ö –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    console.log('üîç DIAGNOSING modal overlay elements...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Z-index –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const allElements = document.querySelectorAll('*');
    const highZIndexElements = [];
    const suspiciousElements = [];

    allElements.forEach(el => {
        const zIndex = window.getComputedStyle(el).zIndex;
        if (zIndex !== 'auto' && parseInt(zIndex) > 99995) { // –í—ã—à–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            highZIndexElements.push({
                element: el,
                zIndex: zIndex,
                tagName: el.tagName,
                id: el.id,
                className: el.className,
                position: window.getComputedStyle(el).position,
                display: window.getComputedStyle(el).display,
                visibility: window.getComputedStyle(el).visibility
            });
        }

        // –ò—â–µ–º –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å fixed –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤ —Ü–µ–Ω—Ç—Ä–µ
        if (window.getComputedStyle(el).position === 'fixed' && el !== modal) {
            const rect = el.getBoundingClientRect();
            if (rect.width < 100 && rect.height < 100 && // –ú–∞–ª–µ–Ω—å–∫–∏–π —Ä–∞–∑–º–µ—Ä
                Math.abs(rect.left + rect.width / 2 - window.innerWidth / 2) < 50 && // –¶–µ–Ω—Ç—Ä –ø–æ X
                Math.abs(rect.top + rect.height / 2 - window.innerHeight / 2) < 50) { // –¶–µ–Ω—Ç—Ä –ø–æ Y
                suspiciousElements.push({
                    element: el,
                    rect: rect,
                    styles: window.getComputedStyle(el),
                    html: el.outerHTML.substring(0, 200) + '...'
                });
            }
        }
    });

    // ‚úã –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –í–´–°–û–ö–ò–• –≠–õ–ï–ú–ï–ù–¢–ê–•
    console.error('üö® –ü–†–û–ë–õ–ï–ú–ê –í–´–Ø–í–õ–ï–ù–ê: 7 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –≤—ã—Å–æ–∫–∏–º Z-INDEX –º–µ—à–∞—é—Ç –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É!');
    console.table(highZIndexElements.map((el, index) => ({
        '‚Ññ': index + 1,
        '–≠–ª–µ–º–µ–Ω—Ç': el.element.tagName,
        'Z-Index': el.zIndex,
        'ID': el.element.id || '–±–µ–∑ ID',
        '–ö–ª–∞—Å—Å—ã': el.element.className || '–±–µ–∑ –∫–ª–∞—Å—Å–æ–≤',
        'Position': el.element.style ? el.element.style.position : '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ',
        'Display': el.element.style ? el.element.style.display : '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ',
        'Visibility': el.element.style ? el.element.style.visibility : '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ',
        '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ': el.element.innerText ? el.element.innerText.substring(0, 50) + '...' : '–ø—É—Å—Ç–æ–π —ç–ª–µ–º–µ–Ω—Ç',
        'HTML': el.element.outerHTML.substring(0, 100) + '...'
    })));

    console.log('üîç SUSPICIOUS Fixed Elements in center:', suspiciousElements);

    // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∫–ª–∞—Å—Å–æ–º 'touch-action' –∏–ª–∏ –ø–æ—Ö–æ–∂–∏–º
    const touchElements = document.querySelectorAll('[class*="touch"], [class*="finger"], [class*="joystick"]');
    console.log('üîç TOUCH-related elements:', touchElements);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º viewport meta-tag
    const viewport = document.querySelector('meta[name="viewport"]');
    console.log('üîç Viewport meta:', viewport ? viewport.content : 'NOT FOUND');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö overlays
    console.log('üîç User agent:', navigator.userAgent);
    console.log('üîç Touch capabilities:', {
        touchscreen: navigator.maxTouchPoints > 0,
        ontouchstart: 'ontouchstart' in window,
        pointerEvent: 'onpointerdown' in window
    });

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–∞—á–∞–ª–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    console.warn('üîç SYSTEM OVERLAY DETECTION STARTED');
    console.warn('–ï—Å–ª–∏ –≤–∏–¥–∏–º –æ—Ä–∞–Ω–∂–µ–≤—ã–π –∫–≤–∞–¥—Ä–∞—Ç–∏–∫/–¥–∂–æ—Å—Ç–∏–∫, —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å:');
    console.warn('1. Touch Action Indicator (—Å–∏—Å—Ç–µ–º–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π —Å–µ–∞–Ω—Å–∞)');
    console.warn('2. Pointer Events Hover (CSS hover —ç—Ñ—Ñ–µ–∫—Ç—ã)');
    console.warn('3. Browser Gesture Recognition (—Å–∏—Å—Ç–µ–º–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ)');
    console.warn('4. Mobile System UI (–ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏)');
    console.warn('5. Input Method Editor (—ç–∫—Ä–∞–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)');

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.classList.add('show');

    // Helper function for safe redirections with error handling
    const safeRedirect = (url, planName) => {
        modal.classList.remove('show');
        showApp(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º showApp –∏–∑ screen-manager
        setTimeout(() => {
            try {
                console.log(`üîó Redirecting to ${planName} payment URL: ${url}`);
                // Try modern way first
                if (appState.tg && appState.tg.openLink) {
                    appState.tg.openLink(url);
                } else {
                    // Fallback to regular navigation
                    window.open(url, '_blank');
                }
            } catch (error) {
                console.error(`‚ùå Error redirecting to ${planName} payment link:`, error);
                showToast('error', `–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ ${planName}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.`);
                // Fallback to popup
                window.open(url, '_blank', 'noopener,noreferrer');
            }
        }, 100);
    };

    // –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç—Ä–µ—Ö –∫–Ω–æ–ø–æ–∫ —Ç–∞—Ä–∏—Ñ–æ–≤
    const upgradeBtn = document.getElementById('upgradeBtn'); // –õ–ò–¢–ï –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
    const upgradeBtnPro = document.getElementById('upgradebtn_pro'); // –ü–†–û –Ω–æ–≤—ã–π
    const upgradeBtnStudio = document.getElementById('upgradebtn_studio'); // –°–¢–£–î–ò–û –Ω–æ–≤—ã–π

    console.log('üîò Upgrade buttons found:', !!upgradeBtn, !!upgradeBtnPro, !!upgradeBtnStudio);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –õ–ò–¢–ï —Ç–∞—Ä–∏—Ñ–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É upgradeBtn)
    if (upgradeBtn) {
        upgradeBtn.onclick = () => {
            console.log('üîò LITE Upgrade button clicked');
            const paymentUrl = result.payment_urls?.lite || 'https://t.me/tribute/app?startapp=syDv';
            safeRedirect(paymentUrl, 'LITE');
        };
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ü–†–û —Ç–∞—Ä–∏—Ñ–∞ (–Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞)
    if (upgradeBtnPro) {
        upgradeBtnPro.onclick = () => {
            console.log('üîò PRO Upgrade button clicked');
            const paymentUrl = result.payment_urls?.pro || 'https://t.me/tribute/app?startapp=syDv';
            safeRedirect(paymentUrl, 'PRO');
        };
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –°–¢–£–î–ò–û —Ç–∞—Ä–∏—Ñ–∞ (–Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞)
    if (upgradeBtnStudio) {
        upgradeBtnStudio.onclick = () => {
            console.log('üîò STUDIO Upgrade button clicked');
            const paymentUrl = result.payment_urls?.studio || 'https://t.me/tribute/app?startapp=syDv';
            safeRedirect(paymentUrl, 'STUDIO');
        };
    }

    // –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
    const closeBtn = document.getElementById('closeLimitModal');
    if (closeBtn) {
        closeBtn.onclick = () => {
            modal.classList.remove('show');
            showApp(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º showApp –∏–∑ screen-manager
        };
    }
}

// –§—É–Ω–∫—Ü–∏—è –∏–∑ app_modern.js - showWarningAboutNoImage (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏)
export async function showWarningAboutNoImage() {
    return new Promise((resolve) => {
        // –°–æ–∑–¥–∞–µ–º –æ–≤–µ—Ä–ª–µ–π –∏ –º–æ–¥–∞–ª
        const overlay = document.createElement('div');
        overlay.id = 'photo-warning-overlay';
        overlay.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(8px);
            z-index: 10000;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
        `;

        const modal = document.createElement('div');
        modal.style.cssText = `
            background: var(--bg-primary, #ffffff);
            border-radius: 20px;
            padding: 2rem;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            transform: translateY(20px);
            transition: transform 0.3s ease;
        `;

        modal.innerHTML = `
            <div style="display: flex; flex-direction: column; align-items: center; text-align: center; margin-bottom: 1rem;">
                <div style="font-size: 4rem; margin-bottom: 0.25rem; display: flex; align-items: center; justify-content: center;" class="photo-warning-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" style="width: 100%; height: 100%;" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M7 16a4 4 0 01-.88-7.903A5 5 0 0115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                    </svg>
                </div>
            </div>
            <div style="text-align: center; margin-bottom: 1rem;">
                <h3 style="margin: 0 0 1rem 0; color: var(--text-primary, #333); font-size: 1.25rem; font-weight: 600;">–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ</h3>
                <p style="margin: 0; color: var(--text-secondary, #666); font-size: 1rem; line-height: 1.5;">
                    –î–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ Photo Session —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
                </p>
            </div>
            <div style="display: flex; gap: 1rem; justify-content: center;">
                <button id="upload-image-btn" style="
                    flex: 1;
                    padding: 6px 6px;
                    background: linear-gradient(135deg, #7e94f7ff 0%, #1d5df3ff 100%);
                    color: white;
                    border: none;
                    border-radius: 34px;
                    font-size: 1rem;
                    font-weight: 600;
                    cursor: pointer;
                    transition: all 0.2s ease;
                    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
                ">
                    –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                </button>
                <button id="continue-without-btn" style="
                    flex: 1;
                    padding: 6px 6px;
                    background: linear-gradient(135deg, #ee4c62ff 0%, #f72e48ff 100%);
                    color: white;
                    border: none;
                    border-radius: 34px;
                    font-size: 1rem;
                    font-weight: 600;
                    cursor: pointer;
                    transition: all 0.2s ease;
                    box-shadow: 0 4px 15px rgba(245, 87, 108, 0.3);
                ">
                    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ
                </button>
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã hover –¥–ª—è –∫–Ω–æ–ø–æ–∫
        const style = document.createElement('style');
        style.textContent = `
            #upload-image-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5);
            }
            #continue-without-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(245, 87, 108, 0.5);
            }
        `;
        document.head.appendChild(style);

        overlay.appendChild(modal);
        document.body.appendChild(overlay);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        requestAnimationFrame(() => {
            overlay.style.opacity = '1';
            modal.style.transform = 'translateY(0)';
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
        const uploadBtn = modal.querySelector('#upload-image-btn');
        const continueBtn = modal.querySelector('#continue-without-btn');

        uploadBtn.addEventListener('click', () => {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
            overlay.style.opacity = '0';
            modal.style.transform = 'translateY(20px)';
            setTimeout(() => {
                document.body.removeChild(overlay);
                document.head.removeChild(style);
                resolve(false); // false –∑–Ω–∞—á–∏—Ç –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–π–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            }, 300);
        });

        continueBtn.addEventListener('click', () => {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
            overlay.style.opacity = '0';
            modal.style.transform = 'translateY(20px)';
            setTimeout(() => {
                document.body.removeChild(overlay);
                document.head.removeChild(style);
                resolve(true); // true –∑–Ω–∞—á–∏—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
            }, 300);
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
        overlay.addEventListener('click', (e) => {
            if (e.target === overlay) {
                overlay.style.opacity = '0';
                modal.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    document.body.removeChild(overlay);
                    document.head.removeChild(style);
                    resolve(false); // –ó–∞–∫—Ä—ã—Ç–∏–µ = –æ—Ç–º–µ–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                }, 300);
            }
        });
    });
}

// ================================================
// üìã HISTORY NAVIGATION
// ================================================

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–∫—Ä–æ–ª–ª–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ app_modern.js
export async function scrollToLatestImage() {
    await new Promise(resolve => setTimeout(resolve, 100)); // –¥–∞–µ–º DOM –æ–±–Ω–æ–≤–∏—Ç—å—Å—è

    const historyList = document.getElementById('historyList');
    if (!historyList) return;

    // –û–ñ–ò–î–ê–ï–ú –ø–æ–∫–∞ DOM –æ–±–Ω–æ–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–≤—å—é!
    await new Promise(resolve => setTimeout(resolve, 200));

    // –ò—â–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏—Å—Ç–æ—Ä–∏–∏ (—ç—Ç–æ –±—É–¥–µ—Ç –∫—Ä–∞–π–Ω–µ–µ/–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
    const firstHistoryItem = historyList.querySelector('.history-mini');
    if (firstHistoryItem) {
        console.log('üöÄ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–æ–≤–æ–º—É –ø—Ä–µ–≤—å—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');

        // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Ü–µ–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–≤—å—é
        firstHistoryItem.scrollIntoView({
            behavior: 'smooth',
            block: 'center',
            inline: 'nearest'
        });

        console.log('‚úÖ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–æ–≤–æ–º—É –ø—Ä–µ–≤—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } else {
        console.warn('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ–µ –ø—Ä–µ–≤—å—é –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏');
    }
}

export async function scrollToBottomImage() {
    const historyList = document.getElementById('historyList');
    if (!historyList) return;

    // –£–±–∏—Ä–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É - –æ–Ω–∞ –∑–∞–º–µ–¥–ª—è–µ—Ç
    await new Promise(resolve => setTimeout(resolve, 50));

    // –ò—â–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏—Å—Ç–æ—Ä–∏–∏
    const historyItems = historyList.querySelectorAll('.history-mini');
    if (historyItems.length > 0) {
        // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç (—Å–∞–º–æ–µ –Ω–∏–∂–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
        const lastHistoryItem = historyItems[historyItems.length - 1];

        // –£–±–∏—Ä–∞–µ–º —Å–ø–∞–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        if (Math.random() < 0.05) {
            console.log('üöÄ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é');
        }

        // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –±–µ–∑ –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞
        lastHistoryItem.scrollIntoView({
            behavior: 'instant', // 'instant' –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
            block: 'center',
            inline: 'nearest'
        });

        // –£–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏ –ø–æ–¥—Å–≤–µ—Ç–∫—É - –æ–Ω–∏ –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã
        if (Math.random() < 0.05) {
            console.log('‚úÖ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        }
    } else {
        // –£–±–∏—Ä–∞–µ–º —Å–ø–∞–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        if (Math.random() < 0.01) {
            console.warn('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏');
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫ –∏—Å—Ç–æ—Ä–∏–∏ –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–ø–∏—Å–∫–∞
export async function showHistoryWithScroll() {
    const historyBtn = document.getElementById('historyToggleBtn');
    const historyList = document.getElementById('historyList');

    if (historyBtn) {
        // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫–Ω–æ–ø–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ - —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –µ—ë
        historyBtn.scrollIntoView({
            behavior: 'smooth',
            block: 'center',
            inline: 'nearest'
        });
    }

    // –ü–æ–¥–æ–∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    await new Promise(resolve => setTimeout(resolve, 300));

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –æ–Ω –∑–∞–∫—Ä—ã—Ç
    if (historyList && historyList.classList.contains('hidden')) {
        const btn = document.getElementById('historyToggleBtn');
        historyList.classList.remove('hidden');
        btn.classList.add('active');
        updateHistoryDisplay();

        // –ñ–¥–µ–º –ø–æ–∫–∞ DOM –æ–±–Ω–æ–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è
        await new Promise(resolve => setTimeout(resolve, 100));
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫—Ä–∞–π–Ω–µ–º—É (–Ω–æ–≤–æ–º—É) –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –∏—Å—Ç–æ—Ä–∏–∏
    await scrollToLatestImage();
}

// ================================================
// üé® UTILITY FUNCTIONS
// ================================================

// –§—É–Ω–∫—Ü–∏—è –∏–∑ app_modern.js - startUploadButtonBlink
export function startUploadButtonBlink() {
    const chooseBtn = document.getElementById('chooseUserImage');
    if (!chooseBtn) return;

    console.log('üéØ Starting upload button pulse animation');

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∞–Ω–∏–º–∞—Ü–∏—é need-image-pulse (–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)
    chooseBtn.style.animation = 'need-image-pulse 2.4s infinite';  // ‚Üê –ú–ï–ù–Ø–ô–¢–ï –î–õ–ò–¢–ï–õ–¨–ù–û–°–¢–¨ –ó–î–ï–°–¨ (4s - 4 —Å–µ–∫—É–Ω–¥—ã)

    // –ß–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ —É–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    setTimeout(() => {
        chooseBtn.style.animation = '';
        console.log('‚úÖ Upload button pulse animation stopped');
    }, 10000);  // ‚Üê –ú–ï–ù–Ø–ô–¢–ï –û–ë–©–£–Æ –ü–†–û–î–û–õ–ñ–ò–¢–ï–õ–¨–ù–û–°–¢–¨ –ó–î–ï–°–¨ (4000–º—Å - 4 —Å–µ–∫—É–Ω–¥—ã)

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–Ω–æ–ø–∫–µ –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –≤–∏–¥–Ω–∞
    setTimeout(() => {
        chooseBtn.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }, 100);
}

// –§—É–Ω–∫—Ü–∏—è –∏–∑ app_modern.js - toggleModeDetails
export function toggleModeDetails() {
    const carousel = document.getElementById('modeCarouselContainer');
    if (!carousel) {
        console.warn('Mode carousel container not found');
        return;
    }

    const isVisible = carousel.style.display !== 'none';
    carousel.style.display = isVisible ? 'none' : 'block';

    console.log('Mode carousel toggled:', !isVisible ? 'visible' : 'hidden');

    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫–∞—Ä—É—Å–µ–ª–∏ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ
    if (!isVisible) {
        setTimeout(() => {
            carousel.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }, 100);
    }
}

// –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ (–Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤—ã—à–µ –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å)
import('./history-manager.js').then(module => {
    window.updateHistoryDisplay = module.updateHistoryDisplay;
});

// === –î–û–°–¢–£–ü–ù–´–ï –í –ì–õ–û–ë–ê–õ–¨–ù–û–ú –û–ë–™–ï–ö–¢–ï ===
window.toggleModeDetails = toggleModeDetails;

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π scope –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
